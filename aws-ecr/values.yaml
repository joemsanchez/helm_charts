replicaCount: 1

image:
  repository: hub.emrops.com/external/aws-cli
  tag: 1.19.5
  pullPolicy: IfNotPresent

env:
  account: "983708293885"
  region: us-east-1

envSecrets:
  aws_access_key_id: "aws-ecr-credentials"
  aws_secret_access_key: "aws-ecr-credentials"

secret:
  external: true
  prefix: /hq/k8s/devops-dev

serviceAccount:
  create: true
  name: "aws-ecr"

service: {}

alias: false
# disableDeploy: true
healthProbes: false

ingress:
  enabled: false

resources:
  limits:
    cpu: 300m
    memory: 512Mi
  requests:
    cpu: 300m
    memory: 512Mi

nodeSelector: {}

tolerations: []

affinity: {}

persistence: []

cronJob:
  - name: cronjob
    interpolate: true
    spec:
      schedule: "* */8 * * *"
      successfulJobsHistoryLimit: 2
      failedJobsHistoryLimit: 2
      concurrencyPolicy: Forbid
      jobTemplate:
        spec:
          backoffLimit: 4
          template:
            spec:
              restartPolicy: Never
              activeDeadlineSeconds: 600
              containers:
                - name: job
                  image: "{{ .Values.image.repository }}"
                  tag: "{{ .Values.image.tag }}"
              command:
              - "/bin/sh"
              - "-c"
              - |
                AWS_ACCOUNT={{ .Values.env.account }}
                export AWS_ACCESS_KEY_ID=${aws_access_key_id}
                export AWS_SECRET_ACCESS_KEY=${aws_secret_access_key}
                export AWS_REGION=us-east-1
                echo "AWS_ACCOUNT=$AWS_ACCOUNT"
                echo "AWS_REGION=$AWS_REGION"
                DOCKER_REGISTRY_SERVER=https://${AWS_ACCOUNT}.dkr.ecr.${AWS_REGION}.amazonaws.com
                DOCKER_USER=AWS
                DOCKER_PASSWORD=`aws ecr get-login --region ${AWS_REGION} --registry-ids ${AWS_ACCOUNT} | cut -d' ' -f6`
                {{ range .Values.Namespaces }}
                kubectl delete secret aws-registry || true
                kubectl create secret docker-registry aws-registry \
                --docker-server=$DOCKER_REGISTRY_SERVER \
                --docker-username=$DOCKER_USER \
                --docker-password=$DOCKER_PASSWORD \
                --docker-email=no@email.local
                {{ end }}
                kubectl patch serviceaccount {{ .Values.serviceAccount.name }} -p '{"imagePullSecrets":[{"name":"aws-registry"}]}'
