# Authentication settings
# Valid values for enabled_auth_method are `none`, `password`, and `openId`.
auth:
  enabledMethod: password
#  password: ""
#  openId:
#    issuerBaseUrl: ""
#    clientId: ""
#    baseUrl: ""
#    secret: ""
#    groupClaim: ""
#    userGroup: ""

replicaCount: 1

image:
  repository: quay.io/ansible/awx-operator
  tag: '0.9.0'
  pullPolicy: Always

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""
hostnameOverride: ""
namespace: "awx"

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "awx-demo"
    nginx.ingress.kubernetes.io/session-cookie-hash: "sha1"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/add-base-url: "true"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "*"
  path: /awx
  hosts:
    - testservices.emrops.com
  tls:
  - secretName: tls-star-emrops
    hosts:
    - testservices.emrops.com

rbac:
  create: true
  namespaced: true

serviceAccount:
  create: true
  annotations: {}
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

service:
  type: ClusterIP
  port: 80

livenessProbe:
  httpGet:
    path: /healthz
    port: 6789
  initialDelaySeconds: 15
  periodSeconds: 20

#
# Init containers parameters:
# volumePermissions: Change the owner of the persist volume mountpoint to RunAsUser:fsGroup
#
volumePermissions:
  enabled: true
  securityContext:
    runAsUser: 0

# Pod Security Context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
#
securityContext:
  enabled: true
  fsGroup: 1000
  runAsUser: 1000

resources: {}

nodeSelector: {}

tolerations: []

affinity: {}

